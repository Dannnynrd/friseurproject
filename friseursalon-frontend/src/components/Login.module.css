/* friseursalon-frontend/src/components/Login.module.css */

/*
  Die meisten Layout- und Formular-Stile werden durch Tailwind CSS
  direkt in der JS-Datei gehandhabt.
  Dieses Modul enthält spezifische Stile für die Login-Seite,
  falls diese über Standard-Tailwind-Utilities hinausgehen.
*/

.loginPageContainer {
    /*
      Tailwind-Klassen im JS:
      flex items-center justify-center min-h-screen bg-gray-100 py-12 px-4 sm:px-6 lg:px-8
    */
    /* Hier könnte z.B. ein Hintergrundbild oder -muster für die gesamte Seite hin. */
}

.authContainer {
    /*
      Tailwind-Klassen im JS:
      w-full max-w-md p-8 space-y-8 bg-white rounded-xl shadow-2xl animate-up
    */
    /* Spezifische Stile für den Haupt-Login-Container, falls benötigt. */
}

.formGroup {
    /* Dient als semantischer Haken. Das meiste Styling kommt von Tailwind auf den Inputs/Labels. */
    margin-bottom: 1.25rem; /* Tailwind: mb-5 */
}

.formInput {
    /*
      Tailwind-Klassen im JS:
      mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm
      placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm
      Fehlerfall (border-red-500) wird dynamisch im JS gesetzt.
    */
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.authButton {
    /*
      Tailwind-Klassen im JS:
      group relative w-full flex justify-center py-3 px-4 border border-transparent
      text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700
      focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50
    */
}

.authButton .svg-inline--fa:not(.fa-spinner) { /* Für das Icon neben dem Text, nicht den Spinner */
    /* Tailwind-Klassen im JS: mr-2 h-5 w-5 text-indigo-500 group-hover:text-indigo-400 */
    /* Die Farbe des Icons wird hier über Tailwind gesteuert, daher keine spezifische CSS-Regel nötig,
       es sei denn, es gibt komplexere Anforderungen. */
}


.formMessage {
    /*
      Tailwind-Klassen im JS:
      mt-4 p-3 rounded-md text-sm flex items-center
      Spezifische Farben für error/success werden im JS gesetzt (z.B. bg-red-50 text-red-700 border-red-200).
    */
}

.formMessage.error {
    /* Dient als semantischer Haken, falls spezifische Modul-Stile für Fehlermeldungen benötigt werden. */
}


/* Die .animate-up Klasse und die Logik mit .visible für die Animation
   wird als global betrachtet und sollte in App.css oder index.css verbleiben. */
