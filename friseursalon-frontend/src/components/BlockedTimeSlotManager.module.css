/* friseursalon-frontend/src/components/BlockedTimeSlotManager.module.css */

/*
  Da die BlockedTimeSlotManager-Komponente primär mit Tailwind CSS gestylt wird,
  enthält dieses Modul möglicherweise nur sehr spezifische Stile oder bleibt leer.
*/

.blockedTimeSlotManagerContainer {
    /* Tailwind im JS: bg-white p-4 sm:p-6 rounded-xl shadow-lg */
}

.addSlotForm {
    /* Tailwind im JS: mb-8 p-6 bg-slate-50 rounded-lg shadow */
}

.formGroup {
    /* Dient als semantischer Haken. Styling über Tailwind im JS. */
}

.formErrorMessage {
    /* Tailwind im JS: mt-2 text-xs text-red-600 flex items-center */
}

.message {
    /* Tailwind im JS: mb-4 p-3 rounded-md border text-sm flex items-center */
}

.noSlots {
    /* Tailwind im JS: text-center py-8 px-6 bg-slate-50 rounded-lg */
}

.tableContainer {
    /* Tailwind im JS: overflow-x-auto shadow rounded-lg */
}

.appTable {
    /* Tailwind im JS: min-w-full divide-y divide-gray-200 */
}

.tableRow:hover {
    /* Tailwind im JS: hover:bg-slate-50 transition-colors duration-150 */
}

.actionButton {
    /* Tailwind im JS: p-1.5 rounded-md transition-colors */
}

/* Anpassung für react-datepicker, falls globale Stile nicht ausreichen
   oder spezifisch für diese Komponente sein sollen.
   Oft sind globale Anpassungen in App.css oder index.css besser.
*/
:global(.react-datepicker-wrapper),
:global(.react-datepicker__input-container) {
    width: 100%; /* Stellt sicher, dass der DatePicker die volle Breite des Containers einnimmt */
}

:global(.react-datepicker__input-container input) {
    /* Tailwind-Klassen werden im JS direkt auf das Input-Element des DatePickers angewendet,
       aber falls das nicht möglich ist, können hier Basis-Stile definiert werden.
       Beispiel:
       width: 100%;
       padding: 0.625rem 0.75rem; // Tailwind: p-2.5
       border-radius: 0.375rem; // Tailwind: rounded-md
       border: 1px solid #D1D5DB; // Tailwind: border-gray-300
    */
}
